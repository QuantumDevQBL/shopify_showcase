{%- liquid
  assign current_variant = product.selected_or_first_available_variant
  assign cheapest_variant = product.variants | sort: 'price' | first

  assign on_sale = false
  if cheapest_variant.compare_at_price > cheapest_variant.price
    assign on_sale = true
  endif

  assign product_url = product.url | within: collection

  if animation_type == blank
    assign animation_type = 'cc-fade-in-up'
  endif

  assign product_has_swatches = false
  if settings.swatch_enabled and settings.prod_block_swatches and hide_swatches != true
    for product_option in product.options_with_values
      if settings.swatch_option_name == product_option.name
        assign product_has_swatches = true
        break
      endif
    endfor
  endif

  assign primary_image = product.featured_media.preview_image
  assign product_images = product.media | where: 'media_type', 'image'

  if settings.prod_hover == 'second_image'
    assign secondary_image = product.media[1].preview_image

    for media in product_images offset: 1
      if media.id == product.featured_media.id
        assign active_media_found = true
      else
        if active_media_found
          assign secondary_image = media.preview_image
          break
        endif
      endif
    endfor
  endif

  if settings.prod_hover == 'all_images' or product_has_swatches
    assign active_media_found = false
    assign images_before_featured = ''
    assign images_after_featured = ''

    for media in product_images
      if media.id == product.featured_media.id
        assign active_media_found = true
      endif

      assign image_placeholder = media | img_url: '1x1' | replace: '_1x1.', '_{width}x.'
      if active_media_found
        assign images_after_featured = images_after_featured | append: ',' | append: image_placeholder
      else
        assign images_before_featured = images_before_featured | append: ',' | append: image_placeholder
      endif
    endfor

    assign card_images = images_after_featured | append: images_before_featured | replace: ',,', ',' | remove_first: ','
  endif

  if settings.prod_show_videos
    assign videos = product.media | where: 'media_type', 'video'
    unless videos == blank
      for source in videos[0].sources
        if source != blank and source.format == 'mp4'
          assign video_source = source
          break
        endif
      endfor

      assign mp4_url = video_source.url
    endunless
  endif

  assign param_symbol = '?'
  if product.url contains '?'
    assign param_symbol = '&'
  endif
-%}

<div
  class="
    product-block
    cc-product-block
    {% unless product.available %} sold-out{% endunless %}
    {% if on_sale %} on-sale{% endif %}
    {% if settings.prod_hover == "second_image" %}hover-image{% endif %}
    {% if settings.prod_hover == "all_images" and product.images.size > 1 %}all-images{% endif %}
    {% if product.tags contains 'meta-layout-right' %}layout-right{% endif %}
    {% if settings.prod_label_layout == 'marquee_on_hover' %} product-block--marquee-on-hover {% endif%}
    {% if settings.quickbuy_enabled %}product-block--quickbuy{% endif %}
    {% if mp4_url != blank %}product-block--video{% endif %}
    {% if product_has_swatches %}product-block--has-swatches{% endif %}
    {{ product_class }}
  "
  data-loop-index="{{ i }}"
  {% if animate %}
    data-cc-animate="{{ animation_type }}" data-cc-animate-delay="{{ animate | times: 0.15 }}s"
  {% endif %}
  {% if card_images %}
    data-product-images="{{ card_images }}"
  {% endif %}
>
  <div class="product-block__inner">
    <div class="image {% if settings.prod_hover == "second_image" and product.media.size > 1 %}image--hover-second {% if primary_image.aspect_ratio == secondary_image.aspect_ratio %}image--same-aspect-ratio{% endif %}{% endif %}">
      {% if settings.prod_label_layout contains 'marquee' %}
        <div class="product-marquee">
          {% render 'product-label', product: product, cheapest_variant: cheapest_variant %}
        </div>
      {% endif %}

      <a
        data-cc-animate-click
        class="image-inner"
        href="{{ product_url }}"
        aria-label="{{ product.title | escape }}"
        tabindex="-1"
      >
        <div class="image__first">
          {% if mp4_url != blank %}
            {% render 'inline-video', video: mp4_url, image: primary_image %}
          {% else %}
            {% render 'responsive-image', image: primary_image %}
          {% endif %}

          {% unless settings.prod_label_layout contains 'marquee' %}
            {% render 'product-label', product: product, cheapest_variant: cheapest_variant %}
          {% endunless %}
        </div>

        {% if settings.prod_hover == 'second_image' and product.media.size > 1 %}
          <div class="image__second">
            {% render 'responsive-image', image: secondary_image, aspect_ratio: primary_image.aspect_ratio %}
          </div>
        {% endif %}
      </a>
    </div>
    <!-- Hide any element by wrapping it with data-spark="b2c-only" -->
    <div data-spark="b2c-only">
      {%- if settings.swatch_enabled and settings.prod_block_swatches and hide_swatches != true -%}
        {%- assign option_limit = 3 -%}
        {%- for product_option in product.options_with_values -%}
          {%- if settings.swatch_option_name == product_option.name -%}
            <ul
              class="cc-swatches {% if settings.swatch_use_prod_images == true %}cc-swatches-prod-img cc-swatches-prod-img-{{ settings.swatch_prod_images_shape }}{% endif %}"
              data-option-name="{{ product_option.name | escape }}"
            >
              {%- if product.options.size == 1 -%}
                {%- for variant in product.variants -%}
                  {%- assign variant_image = variant.featured_media.preview_image
                    | img_url: '1x1'
                    | replace: '_1x1.', '_{width}x.'
                  -%}
                  {% if forloop.index <= option_limit %}
                    <li>
                      <a
                        rel="nofollow"
                        href="{{ product.url }}{{ param_symbol }}variant={{ variant.id }}"
                        title="{{ variant.title | escape }}"
                        {% if variant.featured_media.preview_image %}
                          data-variant-image="{{ variant_image }}"
                        {% endif %}
                        class="{% unless variant.available %}unavailable{% endunless %} lazyload"
                        data-option-item="{{ variant.title | downcase | escape }}"
                        {% if variant.featured_media %}
                          data-media="{{ variant.featured_media.id }}"
                        {% endif %}
                        {% if settings.swatch_method == 'image' and settings.swatch_use_prod_images == false %}
                          data-bgset="{{ variant.title | handle | append: '.png' | file_img_url: '48x48', crop: 'center' }}"
                        {% elsif settings.swatch_use_prod_images == true %}
                          data-bgset="{{ variant.featured_media.preview_image | img_url: '72x', crop: 'center' }}"
                          style="{% if settings.swatch_prod_images_shape == "natural" %}padding-top: {{ 1 | divided_by: variant.featured_media.preview_image.aspect_ratio | times: 100 }}%;{% endif %}"
                        {% else %}
                          style="background-color:{{ variant.title | downcase | remove: ' ' | escape }}"
                        {% endif %}
                      >
                        {{ variant.title }}
                      </a>
                    </li>
                  {% endif %}
                {%- endfor -%}
                {%- if product.variants.size > option_limit -%}
                  <li class="product-block__more-label">
                    <span>&plus;{{ product.variants.size | minus: option_limit }}</span>
                  </li>
                {%- endif -%}
              {%- else -%}
                {%- assign product_option_position_0index = product_option.position | minus: 1 -%}
                {%- for product_option_value in product_option.values -%}
                  {%- liquid
                    assign option_value_variant = false
                    assign is_unavailable = true
                    for variant in product.variants
                      if variant.options[product_option_position_0index] == product_option_value
                        assign option_value_variant = variant
                        break
                      endif
                    endfor
                    for variant in product.variants
                      if variant.available and variant.options[product_option_position_0index] == product_option_value
                        assign is_unavailable = false
                        break
                      endif
                    endfor
                    assign variant_image = option_value_variant.featured_media.preview_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.'
                  -%}
                  {% if forloop.index <= option_limit %}
                    <li>
                      <a
                        rel="nofollow"
                        href="{{ product.url }}{{ param_symbol }}variant={{ option_value_variant.id }}"
                        title="{{ product_option_value | escape }}"
                        class="{% if is_unavailable %} unavailable{% endif %} lazyload"
                        {% if option_value_variant.featured_media.preview_image %}
                          data-variant-image="{{ variant_image }}"
                        {% endif %}
                        data-option-item="{{ product_option_value | downcase | escape }}"
                        {% if option_value_variant.featured_media %}
                          data-media="{{ option_value_variant.featured_media.id }}"
                        {% endif %}
                        {% if settings.swatch_method == 'image' and settings.swatch_use_prod_images == false %}
                          data-bgset="{{ product_option_value | handle | append: '.png' | file_img_url: '48x48', crop: 'center' }}"
                        {% elsif settings.swatch_use_prod_images == true %}
                          data-bgset="{{ option_value_variant.featured_media.preview_image | img_url: '72x', crop: 'center' }}"
                          style="{% if settings.swatch_prod_images_shape == "natural" %}padding-top: {{ 1 | divided_by: option_value_variant.featured_media.preview_image.aspect_ratio | times: 100 }}%;{% endif %}"
                        {% else %}
                          style="background-color:{{ product_option_value | downcase | remove: ' ' | escape }}"
                        {% endif %}
                      >
                        {{ product_option_value }}
                      </a>
                    </li>
                  {% endif %}
                {%- endfor -%}
                {%- if product_option.values.size > option_limit -%}
                  <li class="product-block__more-label">
                    <span>&plus;{{ product_option.values.size | minus: option_limit }}</span>
                  </li>
                {%- endif -%}
              {%- endif -%}
            </ul>
          {%- endif -%}
        {%- endfor -%}
      {%- endif -%}

      <div class="quick_buy_fixed">
        <style>
                    .top_container {
                      display: flex;
                      justify-content: space-between;
                    }

                    .top_container a {
                      font-size: 1.2rem;
                    }

                    .top_container {
                      padding: 10px 0;
                    }

          .quick_buy_fixed .quantity-wrapper {
            height: 35px;
          }

          .quick_buy_fixed button {
            height: 35px;
            font-size: 10px !important;
            padding: 0;
          }
        </style>
        <div class="top_container">
          <a
            data-cc-animate-click
            class="product-area__details__title product-detail__gap-sm h2"
            href="{{ product.url }}"
            {{ block.shopify_attributes }}
          >
            {{ product.title }}
          </a>

          <div class="price">
            {% if product.price_varies %}{{ 'products.listing.from' | t }}{% endif %}
            <span class="theme-money">{%- render 'price', price: cheapest_variant.price -%}</span>
            {% if on_sale -%}
              <span class="was-price theme-money">
                {%- render 'price', price: cheapest_variant.compare_at_price -%}
              </span>
            {%- endif %}

            {% render 'unit-price', variant: cheapest_variant %}
          </div>
        </div>

        <div
          class="
            product-detail__form__options product-detail__gap-lg
            product-detail__form__options--{{ block.settings.variant_style }}
            {% if product.variants.size == 1 %}product-detail__form__options--no-options no_variations{% endif %}
          "
          data-show-realtime-availability="{{ block.settings.show_realtime_availability }}"
          {{ block.shopify_attributes }}
        >
          {% form 'product',
            product,
            id: product_form_id,
            class: 'thumbnail_form product-purchase-form feedback-add_in_modal'
          %}
            {% if product.variants.size > 1 %}
              <div class="pretty-select">
                <select
                  name="id"
                  class="replaced"
                  aria-label="{{ 'products.product.selector_label' | t | escape }}"
                  aria-label="Taille"
                >
                  {% for variant in product.variants %}
                    <option
                      value="{{ variant.id }}"
                      {% if variant == current_variant %}
                        selected="selected"
                      {% endif %}
                      {% if variant.inventory_management != blank %}
                        data-inventory="{{ variant.inventory_quantity }}"
                      {% endif %}
                      data-stock="{% if variant.inventory_management != blank and variant.inventory_quantity <= 0 %}out{% endif %}"
                    >
                      {{ variant.title | escape }}
                    </option>
                  {% endfor %}</select
                ><span class="text"
                  ><span class="label">Taille:</span>
                  {% for variant in product.variants %}
                    {% if variant == current_variant %}
                      <span class="value">
                        {{ variant.title | escape }}
                      </span>
                    {% endif %}
                  {% endfor %}
                </span>
                <svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
                  <path d="M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z"></path><path d="M0-.75h24v24H0z" fill="none"></path>
                </svg>
              </div>
            {% else %}
              <div class="pretty-select no_variations" style="visibility: hidden;">
                <select
                  name="id"
                  class="replaced"
                  aria-label="{{ 'products.product.selector_label' | t | escape }}"
                  aria-label="Taille"
                >
                  {% for variant in product.variants %}
                    <option
                      value="{{ variant.id }}"
                      {% if variant == current_variant %}
                        selected="selected"
                      {% endif %}
                      {% if variant.inventory_management != blank %}
                        data-inventory="{{ variant.inventory_quantity }}"
                      {% endif %}
                      data-stock="{% if variant.inventory_management != blank and variant.inventory_quantity <= 0 %}out{% endif %}"
                    >
                      {{ variant.title | escape }}
                    </option>
                  {% endfor %}</select
                ><span class="text"
                  ><span class="label">Taille:</span>
                  {% for variant in product.variants %}
                    {% if variant == current_variant %}
                      <span class="value">
                        {{ variant.title | escape }}
                      </span>
                    {% endif %}
                  {% endfor %}
                </span>
                <svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
                  <path d="M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z"></path><path d="M0-.75h24v24H0z" fill="none"></path>
                </svg>
              </div>
            {% endif %}

            <div
              class="
                product-detail__form__action product-detail__gap-lg
                product-detail__form__options--with-quantity
                {% if enable_dynamic_payment_button %}with-payment-button{% endif %}
              "
            >
              <div class="quantity-wrapper border-radius-{{ settings.buttons_shape }}">
                <a href="#" data-quantity="down">&minus;</a>
                <input
                  aria-label="{{ 'products.product.quantity' | t }}"
                  class="select-on-focus"
                  name="quantity"
                  value="1"
                >
                <a href="#" data-quantity="up">&plus;</a>
              </div>

              <button class="button {% if enable_dynamic_payment_button %}alt{% endif %}" type="submit" name="add">
                {%- if is_preorder_product -%}
                  {{ 'products.product.preorder' | t }}
                {%- else -%}
                  {{ 'products.product.add_to_cart' | t }}
                {%- endif -%}
              </button>

              <!-- Just Button -->
              <just-pay-button
                theme="default"
                default_variant="{{product.selected_or_first_available_variant.id}}"
                default_available="{{product.selected_or_first_available_variant.available}}"
                product_id="{{ product.id }}"
                product_handle="{{ product.handle }}"
                className="just-btn just-btn-product"
                app_id="be49abf4-ac3c-4246-8c49-521f6d6a677d"
                domain="BRAI"
                source="product-form"
              >
              </just-pay-button>
              <style>
                .product-detail__form just-pay-button::part(just-button) {
                    border-radius: 2px;
                    margin-top:10px;
                       font-family: var(--font-stack-header);
                       font-style: var(--font-style-header);
                       font-weight: var(--font-weight-header);
                       text-transform: uppercase;
                       letter-spacing: .08em;
                       font-size: calc(((var(--font-size-base) - 2) / (var(--font-size-base))) * 1em);
                     }
                   .product-detail__form just-pay-button {
                       width: -webkit-fill-available;
                       width: -moz-available;
                       width: -o-available;
                     }
              </style>
              <!-- End Of Just Button -->
              {% comment %}
                {% if enable_dynamic_payment_button %}
                  {{ form | payment_button }}
                {% endif %}
              {% endcomment %}
            </div>

            {{ form | payment_terms }}

            {% if block.settings.show_pickup_availability %}
              {% render 'store-availability', product: product, current_variant: current_variant %}
            {% endif %}

            {% if section.settings.show_backorder_text %}
              {% render 'backorder', variant: product.selected_variant %}
            {% endif %}
          {% endform %}
        </div>
      </div>

      {%- if settings.quickbuy_enabled -%}
        <div class="cc-quick-buy-btn-container">
          <a href="{{ product_url }}" data-cc-quick-buy class="button alt cc-quick-buy-btn">
            {{ 'products.listing.quick_view' | t }}
          </a>
        </div>
      {%- endif -%}

      <a data-cc-animate-click href="{{ product_url }}" class="caption upper">
        <span class="title">{{ product.title }}</span>

        {% if show_vendor %}
          <span class="vendor">{{ product.vendor }}</span>
        {% endif %}

        <div class="price">
          {% if product.price_varies %}{{ 'products.listing.from' | t }}{% endif %}
          <span class="theme-money">{%- render 'price', price: cheapest_variant.price -%}</span>
          {% if on_sale -%}
            <span class="was-price theme-money">{%- render 'price', price: cheapest_variant.compare_at_price -%}</span>
          {%- endif %}

          {% render 'unit-price', variant: cheapest_variant %}
        </div>
      </a>

      {% if settings.show_product_block_reviews %}
        <a data-cc-animate-click href="{{ product_url }}" class="themed-product-reviews" tabindex="-1">
          {% render 'rating', rating_value: product.metafields.reviews.rating.value %}
          {%- assign rating_count = product.metafields.reviews.rating_count | plus: 0 -%}
          {% if rating_count != blank and rating_count > 0 %}
            <span class="cc-rating-custom-caption">
              {{ rating_count }}
              {{ 'products.product.reviews_link' | t: count: rating_count | downcase }}
            </span>
          {% endif %}
        </a>
      {% endif %}
    </div>
  </div>
  <!-- SparkLayer product card script -->
  <spark-product-card parent-id="{{ product.id }}"></spark-product-card>

  <script>
    
    
    
    
    
    
    
                        document.addEventListener("DOMContentLoaded", function() {
                          var selectElements = document.querySelectorAll('.pretty-select select.replaced');

                          selectElements.forEach(function(selectElement) {
                            var valueElement = selectElement.parentElement.querySelector('span.value');

                            selectElement.addEventListener('change', function() {
                              var selectedOption = selectElement.options[selectElement.selectedIndex];
                              valueElement.textContent = selectedOption.textContent;
                            });
                          });
                        });

    $applyAjaxToProductFormCustom = function ($formContainer) {
    var shopifyAjaxAddURL = theme.routes.cart_add_url + '.js';

    $formContainer.filter('[data-ajax-add-to-cart="true"]:not(.feedback-go_to_cart)').find('.product-purchase-form').on('submit', function (e) {
      e.preventDefault();
      var $form = $(this);

      //Disable add button
      var $btn = $(this).find('[type=submit]').attr('disabled', 'disabled').addClass('confirmation adding');
      $btn.data('originalHtml', $btn.html()).html(theme.strings.productAddingToCart);

      var $stickyBtn = $('.product-area__add-to-cart-xs button');
      var updateStickyButton = theme.viewport.isXs() && $stickyBtn.length;
      if (updateStickyButton) {
        $stickyBtn.attr('disabled', 'disabled');
        $stickyBtn.data('originalHtml', $stickyBtn.html()).html(theme.strings.productAddingToCart);
      }

      //Add to cart
      $.post(shopifyAjaxAddURL, $form.serialize(), function (itemData) {
        //Enable add button
        $btn.html(theme.icons.tick + ' ' + theme.strings.productAddedToCart);

        if (updateStickyButton) {
          $stickyBtn.html(theme.icons.tick + ' ' + theme.strings.productAddedToCart);
        }

        setTimeout(function () {
          $btn.removeAttr('disabled').removeClass('confirmation').html($btn.data('originalHtml'));
          if (updateStickyButton) {
            $stickyBtn.removeAttr('disabled').removeClass('confirmation').html($stickyBtn.data('originalHtml'));
          }
        }, 4000);

        if ($form.hasClass('feedback-add_in_modal') || $form.hasClass('feedback-add_in_modal_no_checkout')) {
          var product = $.parseJSON(itemData);
          var noCheckoutButton = $form.hasClass('feedback-add_in_modal_no_checkout');

          //Preload the thumbnail image
          var thumbUrl = theme.Shopify.formatImage(product.image, '300x');
          var img = new Image();
          img.src = thumbUrl;

          $btn.removeClass('adding');

          var variantHtml = "";

          var $priceElem = $form.closest('.product-area__details__inner').find('.price-area');
          if ($priceElem.length) {
            variantHtml += "<p class=\"cart-product__content__price\">".concat($priceElem.html(), "</p>");
          }

          if (product.selling_plan_allocation && product.selling_plan_allocation.selling_plan.name) {
            variantHtml += "<p class=\"cart-product__content__meta\">".concat(product.selling_plan_allocation.selling_plan.name, "</p>");
          }

          if (product.options_with_values && product.options_with_values.length) {
            for (var _i2 = 0; _i2 < product.options_with_values.length; _i2++) {
              var option = product.options_with_values[_i2];
              if (option.name !== "Title" && option.value !== "Default Title") {
                variantHtml += "<p class=\"cart-product__content__meta\">".concat(option.name, ": ").concat(option.value, "</p>");
              }
            }
          }

          var offset = 25;
          var nav = theme.Nav();
          if (nav.bar.getPositionSetting() !== "inline") {
            offset = nav.bar.height();
          }

          showThemeModal([
          '<div id="added-to-cart" class="theme-modal theme-modal--small" role="dialog" aria-modal="true" aria-labelledby="added-to-cart-title">', "<div class=\"inner\" style=\"top:".concat(
          offset, "px\">"),
          '<a href="#" data-modal-close class="modal-close">&times;</a>',
          '<h4 id="added-to-cart-title">' + theme.icons.tick + theme.strings.productAddedToCart + '</h4>',
          '<div class="cart-product">', "<div class=\"cart-product__image\"><img src=\"".concat(
          thumbUrl, "\" alt=\"").concat(product.featured_image.alt, "\"/></div>"),
          '<div class="cart-product__content">' +
          '<p class="cart-product__content__title">', product.product_title, '</p>' + "".concat(
          variantHtml ? variantHtml : '') +
          '</div>',
          '</div>', "<p class=\"links ".concat(
          noCheckoutButton ? 'links--no-checkout' : '', "\">"),
                                  `            
             <!-- Just Button  -->
            <just-pay-button 
             theme="default"
             className="just-btn just-btn-product"
             app_id="be49abf4-ac3c-4246-8c49-521f6d6a677d" 
             domain="BRAI"
             source="cart">
            </just-pay-button>
    	    <style>
	        #added-to-cart just-pay-button::part(just-button) {
    	        border-radius: 0px;
    	        font-size: 13px!important;
                letter-spacing: .13em;
                font-weight: 400;
                width: calc(100% - 10px);
                margin-left: 5px;
                margin-bottom: 10px;
              }
            #added-to-cart just-pay-button {
                width: -webkit-fill-available;
              }
    	    </style>
            <!-- End Of Just Button  -->  
            `,
          '<a href="' + theme.routes.cart_url + "\" class=\"button ".concat(noCheckoutButton ? '' : 'alt', "\">") + theme.strings.viewCart + '</a>',
          '<a href="' + theme.routes.checkout + '" class="button button--checkout" [data-cc-checkout-button]>' + theme.strings.popupCheckout + '</a> ',
          '</p>',
          '</div>',
          '</div>'].
          join(''), "added-to-cart", null);
        }

        // Update header (& cart if on cart)
        $.get(theme.routes.cart_url, function (data) {
          var cartUpdateSelector = '#site-control .cart:not(.nav-search), [data-section-type="cart-template"]';
          var $newCartObj = $($.parseHTML('<div>' + data + '</div>')).find(cartUpdateSelector);
          $(cartUpdateSelector).each(function (index) {
            $($newCartObj[index]).find('[data-cc-animate]').removeAttr('data-cc-animate');
            $(this).replaceWith($newCartObj[index]);
            $(this).parent().find('[data-cc-animate]').removeAttr('data-cc-animate');
          });
        });
      }, 'text').fail(function (data) {
        //Enable add button
        $btn.removeAttr('disabled').removeClass('confirmation').html($btn.data('originalHtml'));

        if (updateStickyButton) {
          $stickyBtn.removeAttr('disabled').removeClass('confirmation').html($stickyBtn.data('originalHtml'));
        }

        //Not added, show message
        if (typeof data != 'undefined' && typeof data.status != 'undefined') {
          var jsonRes = $.parseJSON(data.responseText);
          var $statusMessageContainer = $form.find('.product-status-message');
          $statusMessageContainer.html(jsonRes.description);
          $statusMessageContainer.slideDown().fadeIn();

          setTimeout(() => {
            $statusMessageContainer.slideUp();
          }, 8000);
        } else {
          //Some unknown error? Disable ajax and submit the old-fashioned way.
          $form.attr('ajax-add-to-cart', 'false').submit();
        }
      });
    });
  };

                      function defer(method) {
        if (window.jQuery) {
            method();
        } else {
            setTimeout(function() { defer(method); }, 50);
        }
    }

    defer(function() {
        // Your code here
        var $formContainer = $('.thumbnail_form.product-purchase-form.feedback-add_in_modal');

        if ($formContainer.length) {
            $formContainer.on('submit', function(e) {
                //e.preventDefault();
                console.log("clicked");
                 $applyAjaxToProductFormCustom($formContainer);
              console.log("clicked after function");
            });
        }
    });











  </script>
</div>
